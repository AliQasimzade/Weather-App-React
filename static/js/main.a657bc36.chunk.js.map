{"version":3,"sources":["App.js","index.js"],"names":["App","useState","filter","setFilter","data","setData","isFalse","setIsFalse","myRef","useRef","useLayoutEffect","axios","get","then","res","console","log","setTimeout","results","current","style","backgroundImage","urls","full","className","ref","TextField","error","flex","id","label","helperText","variant","value","onChange","e","target","handleChangeCityWeather","placeholder","Fab","onClick","stopPropagation","test","handleSearchCity","marginLeft","width","Card","CardActionArea","CardContent","Typography","gutterBottom","component","name","color","Math","abs","main","temp","toFixed","CardMedia","alt","weather","icon","image","title","description","humidity","wind","speed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a657bc36.chunk.js","sourcesContent":["import React, { useState, useRef, useLayoutEffect } from \"react\";\nimport \"./index.css\";\nimport axios from \"axios\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fab from \"@material-ui/core/Fab\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst App = () => {\n  const [filter, setFilter] = useState(\"\");\n  const [data, setData] = useState(null);\n  const [isFalse, setIsFalse] = useState(false);\n  const myRef = useRef(null);\n  const handleChangeCityWeather = (e) => {\n    setFilter(e.target.value);\n  };\n  useLayoutEffect(() => {\n    axios\n      .get(\n        \"https://api.openweathermap.org/data/2.5/weather?q=London&appid=36b30956cad8e4c85834f1a46cb61dec\"\n      )\n      .then((res) => {\n        setData(res.data);\n        console.log(res.data);\n      });\n    setTimeout(() => {\n      axios\n        .get(\n          \"https://api.unsplash.com/search/photos?query=London&client_id=5aualamt2KC7W-6LD_lWJYCZazwNlUMrQ6-KkH3wo9Y\"\n        )\n        .then((res) => {\n          console.log(res.data.results);\n          myRef.current.style.backgroundImage = `url(${res.data.results[0].urls.full})`;\n        });\n    }, 200);\n  }, []);\n  const handleSearchCity = (e) => {\n    console.log(e);\n    e.stopPropagation();\n    if (filter === \"\") {\n      setIsFalse(true);\n    } else {\n      let test = /^[\" \"]+$/;\n\n      if (test.test(filter) === true) {\n        setIsFalse(true);\n      } else {\n        setIsFalse(false);\n        axios\n          .get(\n            `https://api.openweathermap.org/data/2.5/weather?q=${filter}&appid=36b30956cad8e4c85834f1a46cb61dec`\n          )\n          .then((res) => {\n            setData(res.data);\n          });\n        setTimeout(() => {\n          axios\n            .get(\n              `https://api.unsplash.com/search/photos?query=${filter}&client_id=5aualamt2KC7W-6LD_lWJYCZazwNlUMrQ6-KkH3wo9Y`\n            )\n            .then((res) => {\n              console.log(res.data.results);\n              myRef.current.style.backgroundImage = `url(${res.data.results[0].urls.full})`;\n            });\n        }, 200);\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\" ref={myRef}>\n      <div className=\"container\">\n        <div className=\"search\">\n          <TextField\n            error={isFalse}\n            style={{ flex: \"1\" }}\n            id=\"outlined-error-helper-text\"\n            label={isFalse ? \"Error\" : \"\"}\n            helperText={isFalse ? \"Incorrect entry\" : \"\"}\n            variant=\"outlined\"\n            value={filter}\n            onChange={(e) => handleChangeCityWeather(e)}\n            placeholder=\"Search...\"\n          />\n\n          <Fab\n            aria-label=\"search\"\n            onClick={(e) => handleSearchCity(e)}\n            style={{ marginLeft: \"7px\" }}\n          >\n            <SearchIcon />\n          </Fab>\n        </div>\n        {data && (\n          <div className=\"city\" style={{ width: \"100%\" }}>\n            <Card>\n              <CardActionArea>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    Weather in {data.name}\n                  </Typography>\n                  <Typography color=\"textSecondary\" variant=\"h5\" component=\"h6\">\n                    {Math.abs((273.15 - data.main.temp).toFixed(2))} Â°C\n                  </Typography>\n                  <Typography color=\"textSecondary\" variant=\"h5\" component=\"h6\">\n                    <CardMedia\n                      component=\"img\"\n                      alt={`https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`}\n                      image={`https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`}\n                      title=\"Contemplative Reptile\"\n                      style={{ width: \"60px\" }}\n                    />\n                  </Typography>\n                  <Typography color=\"textSecondary\" variant=\"h5\" component=\"h6\">\n                    {data.weather[0].description}\n                  </Typography>\n                  <Typography color=\"textSecondary\" variant=\"h6\" component=\"h6\">\n                    Humidity: {data.main.humidity} %\n                  </Typography>\n                  <Typography color=\"textSecondary\" variant=\"h6\" component=\"h6\">\n                    Wind speed: {data.wind.speed} km/h\n                  </Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}